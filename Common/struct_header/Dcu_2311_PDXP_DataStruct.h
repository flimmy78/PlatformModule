#ifndef _DCU_2311_PDXP_DATA_STRUCT_H_
#define _DCU_2311_PDXP_DATA_STRUCT_H_
#pragma pack(1)
// PDXP协议公共网络包头
namespace pdxp
{
typedef struct
{
    // 0x1354
    UI8 Version;					// 版本号
    UI16 MID;						// 任务代号，表示本次试验任务代号
    UI32 SID;						// 信源地址，表示本帧信息发出站的地址
    UI32 DID;						// 信宿地址，表示本帧信息接收站的地址
    UI32 B;						// 信息类别，表示本帧信息的种类
    UI32 No;						// 包序号，该数据包在一次信息交换过程中的发送序号，0~65535重复计数
    UI8 Flag;						// 标志字段，定义如下：
    // 码位		标识			代码	  含义
    // b0		Direct_FLAG		0/1			表示信宿地址所指对象的性质，指向真实目标/执行仿真目标
    // b1		Ans_FLAG		0/1			表示对该包数据的应答要求，按默认策略进行应答/需要应答
    // b2		Tranfer_FLAG	0/1			表示该包数据的转发策略 执行默认转发/执行强制转发
    // b5~b3	Encry_FLAG					表示该包数据的明密状态以及是否需要加密
    //							000			信源未进行相关加/解密处理
    //							001			明态，需要进行加密处理
    //							010			密态，需要进行解密处理
    //							011			已经成功进行了加/解密处理
    //							100			加密部成功
    //							101			解密不成功
    //							110			保留
    //							111	        保留
    // b7~b6	Save_FLAG		0	表明该包数据是否需要长久保存，00-收方自定； 01-永久保存
    UI8 Reverse[4];				// 保留4个字节
    UI16 Date;						// 发送日期，信源方发送该数据包时刻相对于1950年1月1日的累计天数，1950年1月1日计为第1天
    UI32 Time;						// 发送时标，信源方发送该包时刻对应的北京时，量化为0.1ms
    UI16 Len;						// 数据域长度(ZT+ZS+子帧数据)，该包内数据域的字节长度，计数范围为0~65535，若数据域的字节数大于65535，则对65536取模

}NetPackageHeadPara;
} // namespace pdxp
#pragma pack()