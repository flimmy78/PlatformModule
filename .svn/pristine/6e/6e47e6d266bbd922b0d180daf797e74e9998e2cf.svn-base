/**
 * 本文件包含2311监控模块使用的调频安控基带数据结构。
 */
#ifndef __DCU_2311_DATASTRUCT_H__
#define __DCU_2311_DATASTRUCT_H__
#pragma pack(1)

namespace fm_ak
{
typedef union _CMDID
{
	struct
	{
		BYTE byCmdIndex;
		BYTE byCmdDSegment;
	};
	WORD wCmdID;
}CMDID;

typedef struct _param_set_header
{
    UCHAR  ucUnitID;        // 单元标识
	USHORT usCmdCnt;        // 表示发送该命令的累计数从1开始
} PARAM_SET_HEADER;

//遥测子帧时间
typedef struct
{	
	WORD tenthMillisecond : 4;  //0.1毫秒
	WORD aMillisecond     : 4;  // 1毫秒
	WORD tenMillisecond   : 4;  //10毫秒
	WORD hunMillisecond   : 4;  //100毫秒
	
	WORD aSecond          : 4;   //1秒
	WORD tenSecond        : 4;   //10秒
	WORD aMinute          : 4;   //1分
	WORD tenMinute        : 4;   //10分
	
	WORD aHour            : 4;   //1时
	WORD tenHour          : 2;   //10时  
	WORD aDay             : 4;   //1天
	WORD tenDay           : 4;   //10天
	WORD HunDay           : 2;   //100天
}TIMEDATA_STRUCT, *PTIMEDATA_STRUCT;

//本机全局段主备信息列表结构 ID：E721 SN=0
struct TLocalHSInfo
{
	//本机IP地址
	char aLocalIP[2][32];  

	//本机编号
	WORD wSerialNum;  
	
	//工作机号 1－A机  2－B机
	UCHAR ucWorkID;

	//本机的主备机状态 0：备机  1：主机
	BYTE byHSStatus;   

	//本机切换标志  1：是  0：不是
	BYTE bySwitch;     
    
	//本机的状态  0：正常  1：异常
	BYTE bySysStatus;      

	//切换方式 0：自动切换 1：手动切换
	BYTE bySwitchMode;     

	//切换状态 0：不切换  1：正在切换
	BYTE bySwitchStatus;   
	
	//切换原因 0：不切换  1：主机异常  2：本机指令 3：中心监控指令 4：主控站指令
	BYTE bySwitchReason; 

	//发送帧计数
	DWORD dwSendFrmCnt;      
    
    // added by yangf
    BYTE ucMonitorMode;		//控制模式	      0: 分控， 1：本控
};


//////////////////////////////////////////////////////////////////////////////////
//	简要描述: 以下结构用于和当前目标号相关的信息元
//--------------------------------------------------------------------------------
//	   日志:
//////////////////////////////////////////////////////////////////////////////////
const WORD TC_CURRENTOBJECT_ITEMID = 0x0A18;//跟踪目标状态信息元

//跟踪目标设置
const WORD gc_wCurrentObject_TID = 0xDFF4;//跟踪目标设置
struct  CurrentObjectIDStruct
{
	//0xDFF4
	USHORT  ObjID;      //目标号
	ULONG   SetCount;   //设置计数
	
	USHORT  RadioModulSystem;  //射频调制体制   0：FM  1：PM
	USHORT  VideoModulSystem;  //视频调制体制   0：PSK 1：FSK  2: 4FSK
};

//安控设置结构
//大小：81个32位字
const WORD gc_wTC_TID = 0x13BE;//安控设置结构
typedef struct  BBETCSetupBlk
{   //0x13BE
    USHORT		usCodeRate;		    //码速率，16位无符号整型数，量化单位：1 bps，范围：100~10kbps。
    UCHAR		ucCodeType;		    //码型，8位无符号整型数。D7 ~ D0位： 01H表示NRZ-L；02H表示NRZ-M；03H表示NRZ-S. 缺省值为NRZ-M。
	UCHAR		ucReserved1;	    //保留
	UCHAR		ucReserved2[2];	    //保留
	USHORT      usFrmLen;           //子帧长，16位无符号整型数，量化单位：1 字节，取值范围：8 ~ 1024 字节。它同时也是FPGA申请缓冲区数据长度 2311保留不用。（一个缓冲区一帧安控指令）
	UCHAR       ucFspLen;           //子帧同步码组长FspLen，8位无符号整型数，量化单位：1 位，取值范围：8 ~ 64 位。缺省值为16 2311保留不用。
	UCHAR		ucReserved3[3];     //保留3个字节
	DWORDLONG   dwlSynCode;         //子帧同步码组，64位无符号整型数。缺省值为EB90 2311保留不用。
	UCHAR       ucConvol;           //保留
	UCHAR       ucG2Inv;            //保留
	UCHAR	    ucReserved4[2];	    //保留
	//下面三个参数为遥控停发时保持的状态
	UCHAR       ucOnline;           //加载开关，8位无符号整型数，用于自动停发方式停发时，0表示去载，1表示加载。
	CHAR        cPNSw;              //副载波加调开关，8位无符号整型数，用于自动停发方式停发时， 0表示去调，1表示加调。
	UCHAR       ucDataSw;           //加调数据开关，8位无符号整型数，用于自动停发方式停发时， 0表示去调，1表示加调。
	UCHAR	    ucReserved5;        //保留1个字节
	UINT        nSubwave_rate;      //副载波频率，取值范围：4kHz~50kHz。
    UINT        nReserved6[9];      //保留9个32位字
	UCHAR	    ucReserved7[256];   //保留256字节
}BBETCSetupStruct,*PBBETCSetupStruct;

//安控发令状态
//大小：81+51个32位字
typedef struct  BBETCStatusBlk
{   //0x13BD
	BBETCSetupStruct  TCSetPara;    //设置返回参数

	UCHAR      ucCmdSta;            //发令状态，8位无符号整型数，0XFF表示发令中；0X33表示未发令。
	UCHAR      ucCmdSel;            //正在发令的指令类型，8位无符号整型数，0：告警 1：解锁 2 炸毁 3 复位 4 自检
	WORD       wReserved1;          //保留2个字节
	UINT       nCmdCnt;             //发令计数，32位无符号整型数，表示本条安控指令的发令计数。
	UINT       nCmdNum;             //发令次数，32位无符号整型数，表示所发指令条数。
	UINT       nLoopCompareNum;     //小环比对指令数，32位无符号整型数，表示当前小环比对完的指令计数。
	UINT       nLoopErrorNum;       //小环比对误指令数，32位无符号整型数，表示小环比对错误的指令计数。
	UCHAR      ucLoopCompareResult; //小环比对结果，8位无符号整型数，表示比对结果，0xFF为正确，0xEE为错误, 0xCC表示输入信号功率<-30dBm。
	UCHAR      ucReserved[3];       //保留3个字节
	UINT       nSelfCompareNum;     //自环比对指令数，32位无符号整型数，表示当前自环比对完的指令计数。
	UINT       nSelfErrorNum;       //自环比对误指令数，32位无符号整型数，表示自环比对错误的指令计数。
	UCHAR      ucSelfCompareResult; //自环比对结果，8位无符号整型数，表示比对结果，0xFF为正确，0xEE为错误。
	UCHAR      ucReserved2[3];      //保留3个字节
	TIMEDATA_STRUCT CurTimeB000;    //当前时刻,48位无符号整形数,为0.1ms时码格式
	USHORT CurTime25us;             //当前时刻1s内的25us表示,16位无符号整形数,量化单位25us
	//20150106 yan 修改
	TIMEDATA_STRUCT SendTCCmdTimeB000;  //发送安控指令时间,48位无符号整形数,为0.1ms时码格式
	USHORT SendTime25us;//保留
	UINT		nReserved3[38];      //保留38个32位字
	// 20150608 修改结束
}BBETCStatusStruct,*PBBETCStatusStruct;


//上行调制参数
const WORD gc_wMODU_TID = 0x1402;    //上行调制参数
const WORD gc_wZZMMODU_TID = 0xE564; //上行调制参数
typedef struct
{   //0x1402 //0xE564
    BYTE    byMode;                 //8位无符号整型数。Bit7～Bit0表示工作方式，00H表示任务方式；01H表示自检方式（任务模式下，调制器去调去载）。
    BYTE:8;                         //保留
    WORD:16;                        //保留
    DWORD   dwCarRF;                //上行载波频率，32位无符号整型数，量化单位：1 Hz，取值范围为2200M ~ 2400 MHz。
    DWORD   dwCarIF;                //输出载波中频，32位无符号整型数，量化单位：1 Hz，取值范围为68.5 M ~ 71.5 MHz，缺省为70 MHz。
	BYTE:8;                         //保留
    CHAR    cLevel;                 //输出功率，8位有符号整型数，量化单位：1 dBm，取值范围：－50 ~-10 dBm，缺省为－30 dBm。
    BYTE    byOnline;               //0-去载 1-加载 软件环境退出时设置为去载
    BYTE    byModu;                 //0-去调 1-加调
	SHORT   stOffset;               //多普勒频偏预置(kHz) [-250, 250] 缺省0 2311保留不用
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	DWORD   dwRsv1;                 //保留
    BYTE    byNoiseSw;              //噪声开关，8位无符号整型数，仅在自检工作方式时有效。D7 ~ D0位：00H表示关；01H表示开。缺省值为关 2311保留不用。
    BYTE    byCN0;                  //输出载噪比，8位无符号整型数，量化单位：1 dBHz，取值范围：30 ~ 82 dBHz。缺省值为78dBHz 2311保留不用。
    BYTE:8;                         //保留
	BYTE:8;                         //保留
	WORD:16;                        //保留
	WORD:16;                        //保留
	BYTE    bySimSw;                //多普勒动态模拟开关，8位无符号整型数，D7 ~ D0：00H表示关；01H表示开。缺省值为关 2311保留不用。
    BYTE:8;                         //保留
	WORD    wSimRange;              //多普勒变化范围，16位无符号整型数，量化单位：1 kHz，取值范围：0 ~ 250 kHz，缺省为250 kHz 2311保留不用。
    WORD    wSimRate;               //多普勒变化率，16位无符号整型数，量化单位：1 Hz/s，取值范围：0 ~ 15 kHz/s，缺省为0 Hz/s 2311保留不用。
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	BYTE:8;                         //保留
	DWORD   dwTmIndex;	            //调制频偏，32位无符号整型数，量化单位：1Hz，取值范围：4kHz ~ 200kHz。
    DWORD   adwRsv1[2];             //保留
}TC_MODU_PARA_STRUCT, *PTC_MODU_PARA_STRUCT;

//上行调制状态 FM为0x1401 主字母为0xE563
typedef struct TTCBBEModuStatusBlk
{   //0x1401 //0xE563
	TC_MODU_PARA_STRUCT Param;	    //
	/*UCHAR  ucLockStatuc;			// 锁定指示，00-失锁 01-锁定
	UCHAR ucReserved1;	            //
	UCHAR ucTcToneSend;	            //不使用 － 遥控/侧音发送状态，8位无符号整型数，须从调制器硬件板采集，仅在遥控/侧音分时发送时有效。D7~ D0位：00H表示发送侧音；01H表示发送遥控指令；02H表示停发侧音。
	UCHAR ucReserved2;	            //
	UINT  nDopNco;		            //上行多普勒频偏的NCO值，32位有符号整型数，须从调制器硬件板采集，量化单位：工作时钟/(2的32次方) Hz。
	UINT  nRsvd[4];*/	            //
	UINT  nRsvd[12];
}TTCBBEModuStatusStruct, *PTTCBBEModuStutasStruct;


// 单个频率参数结构
struct TC_SendFrequencyConfigStruct
{
	BYTE     ValidFlag;
	UINT     nFreqValue;
	CHAR     FreqName[100];
};

//频率设置参数
const WORD gc_wFreCfgTID = 0x1406;
struct TC_FRECFG_STRUCT
{
	//0x1406
    UINT nFreCnt;  //频率个数，最大不能超过g_nMaxFreCnt，暂时不用
	UINT nReloadCnt; //加载计数，频率变化时改变
	TC_SendFrequencyConfigStruct TcFreCfg[g_nMaxFreCnt];
};

//L频段下变频器工作参数设置块结构
const WORD gc_wDC_TID = 0x13FF;//下变频器工作参数
typedef struct
{   //L下变频器：0x13FF
    USHORT usOnLine;			// 在线标志，0-在线 1-不在线
	USHORT usPowOut;			// 是否向LNA馈电，0-不馈电 1-馈电
	UINT   nIFOutFreq;			// 输出中频频率，L下变频器该值范围：70MHz±5MHz，缺省值为70 MHz，量化单位：Hz
	UINT   nRFInFreq;			// 输入射频频率，L下变频器该值范围：1750MHz～1850MHz，量化单位：Hz
	SHORT  sAtten1;				// 数控衰减器1衰减量，0~60dB
	SHORT  sAtten2;				// 数控衰减器2衰减量，0~44dB
	SHORT  sRefSel;				// 参考选择0x0000=内参考，0x0001=外参考
	UINT   nUpdateFlag;			// 设置有效标志，保留
	USHORT usAlterMode;			// 衰减模式，1--自动, 0--手动，此参数仅在实时处理衰减时用，不加载到硬件
}BBEDownAlterParaStruct, *LPBBEDownAlterParaStruct;

//L频段下变频器工作状态参数块结构
const WORD gc_wDC_ItemID = 0x1400;//下变频器工作状态
typedef struct
{   //L下变频器：0x1400
	UCHAR  ucControlMode;			// 控制模式，00-分控 01-本控
	UCHAR  ucSelfCheckState;		// 重置计数  0~255循环计数
	UCHAR  ucLockStatuc;			// 锁定指示，00-失锁 01-锁定
	USHORT usAlterMode;				// 两级下变频器的变频模式:0x0000＝两变频器均为高差，1＝两变频器均为低差，
	                                // 2＝第一级变频器为高差，第二级变频器为低差3＝第一级变频器为低差，第二级变频器为高差
	UINT   nRFInFreq;				// 实际输入射频信号频率，量化单位：Hz
	BBEDownAlterParaStruct ParaSet;	// 设置参数结构
}BBEDownAlterStatusStruct, *LPBBEDownAlterStatusStruct;

//L频段上变频器工作参数设置块结构
const WORD gc_wUC_TID = 0x13FD;//上变频器工作参数
typedef struct
{   //L上变频器：0x13FD
    USHORT usOnLine;				// 在线标志，0-在线 1-不在线
	UINT   nInFreq;					// 输入中频频率，L上变频器该值范围：70MHz±10MHz，缺省值为70 MHz，量化单位：Hz
	UINT   nRFOutFreq;				// 输出射频频率，L上变频器该值范围：1750～1850MHz，量化单位：Hz
	SHORT  sAtten1;				    // 数控衰减器衰减量，0~30dB
}BBEUpAlterParaStruct, *LPBBEUpAlterParaStruct;

//L频段上变频器工作状态参数块结构
const WORD gc_wUC_ItemID = 0x13FE;//上变频器工作状态
typedef struct
{   //L上变频器：0x13FE
	UCHAR  ucControlMode;			// 控制模式，00-分控 01-本控
	UCHAR  ucSelfCheckState;		// 重置计数  0~255循环计数
	UCHAR  ucLockStatuc;			// 锁定指示，00-失锁 01-锁定
	BBEUpAlterParaStruct ParaSet;	// 设置参数结构
}BBEUpAlterStatusStruct, *LPBBEUpAlterStatusStruct;

//BBE时码单元设置结构
const WORD gc_wTIMEUNIT_TID = 0xE626;//时码单元设置
typedef struct
{   //0xE626
	UCHAR	ucWorkMode;			    //内/外时统选择，8位无符号整型数。D7 ~ D0位：00H表示内时统；01H表示外时统。缺省值为外时统。
    UCHAR	ucReserved;             //保留
	UCHAR	ucLeap;				    //闰年,00H表示否；01H表示是,仅在"内时统"时有效
	UCHAR	ucReserved1;            //保留
	UCHAR	ucSecond;			    //秒，8位无符号整型数，量化单位为1s，取值范围：0 ~ 59，仅在内时统时有效。
	UCHAR	ucMinute;			    //分，8位无符号整型数，量化单位为1min，取值范围：0 ~ 59，仅在内时统时有效。
	UCHAR	ucHour;				    //时，8位无符号整型数，量化单位为1hour，取值范围：0 ~ 23。仅在内时统时有效。
    UCHAR	ucReserved2;            //保留
	USHORT	usDay;				    //天，16位无符号整型数，量化单位为1day，取值范围：1 ~ 365或366（闰年）。仅在内时统时有效。
	UCHAR   ucReserved3[2];         //保留
	ULONG	ulReserved[4];          //保留
}TC_TIMEUNIT_PARA_STRUCT, *PTC_TIMEUNIT_PARA_STRUCT;

//BBE时码单元状态结构
//      大小：4个32位字
typedef struct TimeUnitStatusBlk
{   //0xE625
	TC_TIMEUNIT_PARA_STRUCT TimeUnitPara; //设置返回参数
    
	UCHAR	ucLock;                 //锁定指示,8位无符号整型数，D7 ~ D0位：00H表示失锁；01H表示锁定
    UCHAR   ucReserved[3];          //保留
    ULONG   ulB000_L32;             //?????
	USHORT  usB000_H16;             //D3 ~ D0位：量化单位为0.1ms；
						            //D7 ~ D4位：量化单位为1ms；
						            //D11 ~ D8位：量化单位为10ms；
						            //D15 ~ D12位：量化单位为100ms；
						            //D19 ~ D16位：量化单位为1s；
						            //D23 ~ D20位：量化单位为10s；
						            //D27 ~ D24位：量化单位为1min；
						            //D31 ~ D28位：量化单位为10min；
						            //D35 ~ D32位：量化单位为1hour；
						            //D37 ~ D36位：量化单位为10hour；
						            //D41 ~ D38位：量化单位为1day；
						            //D45 ~ D42位：量化单位为10day；
						            //D47 ~ D46位：量化单位为100day。
	USHORT	usT25us;                //25us计数,16位无符号整型数，表示1秒内的时间，量化单位：25 us。
	ULONG	ulReserved;	            //保留4个字节
}TimeUnitStatusStruct, *PTimeUnitStatusStruct;

struct TeleCtrlAllStatusStruct
{
	//遥（安）控分系统全局工作状态参数块结构  61H 

	//上变频器工作状态参数块结构   0x13FE
	BYTE                   UcValid;
	BBEUpAlterStatusStruct UcStatus;
	//下变频器工作状态参数块结构
	BYTE                   DcValid;
	BBEDownAlterStatusStruct DcStatus;
	//FM数字可重组调制器工作状态参数块结构
	BYTE                 ModulValid;
	TTCBBEModuStatusStruct ModulStatus;
	//安控工作状态参数块结构
	BYTE                  TcValid;
	BBETCStatusStruct     TcStatus;
	//安控操控台有效标记
	BYTE                  TcOperValid;
	//时码单元工作状态参数块结构
	BYTE                  TimeUnitValid;
	TimeUnitStatusStruct TimeUnitStatus;
};

//--------------------------------------------------------------------------
//主备切换
typedef struct AK_MAIN_BAK_CHANGE
{
	CMDID CmdID;			// 0x0001
	USHORT usCmdCnt;		// 表示发送该命令的累计数从1开始

	UCHAR  ucMainBanSel;	// 00HA主B备；01HA备B主

}AK_MAIN_BAK_CHANGE,*PAK_MAIN_BAK_CHANGE;

//系统退出
typedef struct AK_SYSTEM_QUIT
{
	
	CMDID CmdID;			// 0x0007
	USHORT usCmdCnt;		// 表示发送该命令的累计数从1开始
	
	UCHAR  ucSysQuit;	// 00H：系统关机
	
}AK_SYSTEM_QUIT,*PAK_SYSTEM_QUIT;

} // namespace fm_ak
#pragma pack()
#endif // __DCU_2311_DATASTRUCT_H__
